<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--声明bean-->
    <!--
        引用类型自动注入： spring根据byName,byType规则给引用类型赋值
        1.byName（按名称注入）：java类中引用类型的属性名称和spring容器中bean的id名称一样，
                              且数据类型一样的， 这样的bean能够赋值给引用类型。

          语法：
           <bean id="xxx" class="yy" autowire="byName">
              简单类型属性赋值
           </bean>


        2.byType（按类型注入）：java类中引用类型的数据类型和bean的class是同源的，
                              这些的bean能够赋值给引用类型。

          同源关系：
           1. java中引用类型的数据类型和bean的class值是一样的。
           2. java中引用类型的数据类型和bean的class值是父子类关系的。
           3. java中引用类型的数据类型和bean的class值是接口和实现类关系的。

           语法：
           <bean id="xxx" class="yy" autowire="byType">
              简单类型属性赋值
           </bean>

           注意： 在xml配置文件中， 符合条件的对象，只能有一个。
                 多余一个是报错的。
    -->

    <!-- byType 自动注入 -->
    <bean id="myStudent" class="com.bjpowernode.ba05.Student" autowire="byType">
        <property name="name" value="张三"/>
        <property name="age" value="26" />
        <!--引用类型的赋值-->
        <!--<property name="school" ref="mySchool" />-->
    </bean>

    <!--声明School-->
    <bean id="mySchool" class="com.bjpowernode.ba05.School">
        <property name="name" value="航空大学"/>
        <property name="address" value="北京的海淀区"/>
    </bean>

    <!--声明School的子类-->
    <!--<bean id="primarySchool" class="com.bjpowernode.ba05.PrimarySchool">
        <property name="name" value="北京大兴小学" />
        <property name="address" value="北京的大兴区"/>
    </bean>-->

</beans>